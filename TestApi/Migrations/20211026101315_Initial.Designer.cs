// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestApi.Data;

namespace TestApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211026101315_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestApi.Models.Face", b =>
                {
                    b.Property<int>("FaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("AttrAge")
                        .HasColumnType("int");

                    b.Property<int>("AttrBeauty")
                        .HasColumnType("int");

                    b.Property<string>("AuthType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertificateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CertificateType")
                        .HasColumnType("int");

                    b.Property<string>("CommonUuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ethic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FaceTemperature")
                        .HasColumnType("float");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Irimg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orgimg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonUuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScanDatasScanId")
                        .HasColumnType("int");

                    b.Property<int>("ScanId")
                        .HasColumnType("int");

                    b.Property<double>("Similarity")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemperatureAlarm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint");

                    b.Property<int>("TrackId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FaceId");

                    b.HasIndex("ScanDatasScanId");

                    b.ToTable("Faces");
                });

            modelBuilder.Entity("TestApi.Models.ScanData", b =>
                {
                    b.Property<int>("ScanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Camid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Devid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Devmac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Devname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Devno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Event")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<int>("Timelocal")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScanId");

                    b.ToTable("ScanDatas");
                });

            modelBuilder.Entity("TestApi.Models.Face", b =>
                {
                    b.HasOne("TestApi.Models.ScanData", "ScanDatas")
                        .WithMany("Faces")
                        .HasForeignKey("ScanDatasScanId");

                    b.Navigation("ScanDatas");
                });

            modelBuilder.Entity("TestApi.Models.ScanData", b =>
                {
                    b.Navigation("Faces");
                });
#pragma warning restore 612, 618
        }
    }
}
